{"version":3,"sources":["store/authentication/authenticationSlice.js","store/user/userSlice.js","pages/authentication/Authentication.jsx","utils/hashUtils.js","oauthConfig.js","pages/home/Home.jsx","store/playlists/playlistsSlice.js","layout/card/Card.jsx","components/playlists/userPlaylists/UserPlaylists.js","components/playlists/createPlaylist/CreatePlaylist.jsx","components/playlists/createPlaylistModel/CreatePlaylistModel.js","pages/playlists/Playlists.jsx","components/search/searchResultItem/SearchResultItem.jsx","components/search/searchResult/SearchResult.jsx","components/modal/AddTrackModal.js","pages/search/Search.jsx","assets/images/spotify-logo.png","components/SideBar/SideBar.jsx","App.js","store/store.js","serviceWorker.js","index.js"],"names":["authenticationSlice","createSlice","name","initialState","loggedIn","accessToken","tokenExpiryDate","reducers","setLoggedIn","state","action","payload","setAccessToken","setTokenExpiryDate","date","Date","setSeconds","getSeconds","toISOString","actions","setUserId","selectIsLoggedIn","authorization","userSlice","displayName","userId","product","setDisplayName","setProduct","selectDisplayName","user","hashParams","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","expires_in","history","pushState","document","title","pathname","search","Authentication","isLoggedIn","useSelector","dispatch","useDispatch","useEffect","localStorage","setItem","Number","myHeaders","Headers","append","fetch","method","headers","then","response","json","data","display_name","id","catch","error","console","log","status","className","onClick","open","process","join","replace","to","Home","userName","charAt","toUpperCase","slice","getAccessToken","getItem","getUserId","playlistsSlice","playlistsItems","total","setPlaylistsItem","setTotal","selectplaylistsItems","playlists","getUserPlaylists","items","Card","props","image","uri","description","details","style","background","maxWidth","href","UserPlaylists","map","index","images","url","createPlaylist","createPlayList","cancelPlaylistCreation","confirmPlaylistCreation","useState","setName","setDescription","isPlaylistCreated","setIsPlaylistCreated","reset","onSubmit","evt","preventDefault","type","value","onChange","event","target","disabled","CreatePlaylistModel","Playlists","createdPlaylistInfo","setCreatedPlaylistInfo","isCreateButtonDisabled","setCreateDisabled","body","JSON","stringify","ok","Error","networkError","message","toast","success","position","POSITION","TOP_RIGHT","TOP_CENTER","SearchResultItem","track","modalCallback","src","albumUrl","artist","SearchResult","searchResults","AddTrackModal","setIsOpen","addTrackToPlaylist","checkedPlaylist","setCheckedPlaylist","playlist","checked","Search","setSearch","setSearchResults","isOpen","setTrack","isModalOpen","config","Authorization","params","q","axios","get","res","tracks","smallestAlbumImage","album","smallest","height","artists","placeholder","e","uris","finally","Sidebar","setopen","spotifyLogo","alt","icon","faHome","faMagnifyingGlass","faFolder","App","exact","path","element","store","configureStore","reducer","authenticationReducer","userReducer","playlistsReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2445f365.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  accessToken: \"\",\r\n  tokenExpiryDate: \"\",\r\n};\r\nexport const authenticationSlice = createSlice({\r\n  name: \"authorization\",\r\n  initialState,\r\n  reducers: {\r\n    setLoggedIn: (state, action) => {\r\n      state.loggedIn = action.payload;\r\n    },\r\n    setAccessToken: (state, action) => {\r\n      state.accessToken = action.payload;\r\n    },\r\n    setTokenExpiryDate: (state, action) => {\r\n      const date = new Date();\r\n      date.setSeconds(date.getSeconds() + action.payload);\r\n      state.tokenExpiryDate = date.toISOString();\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoggedIn, setAccessToken, setUserId, setTokenExpiryDate } =\r\n  authenticationSlice.actions;\r\n\r\nexport const selectIsLoggedIn = (state) => state.authorization.loggedIn;\r\nexport const selectAccessToken = (state) => state.authorization.accessToken;\r\nexport const selectTokenExpiryDate = (state) =>\r\n  state.authorization.tokenExpiryDate;\r\n\r\nexport default authenticationSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setLoggedIn } from \"../authentication/authenticationSlice\";\r\n\r\nconst initialState = {\r\n  displayName: \"\",\r\n  userId: \"\",\r\n  product: \"\",\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setDisplayName: (state, action) => {\r\n      state.displayName = action.payload;\r\n    },\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    setProduct: (state, action) => {\r\n      state.product = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDisplayName, setUserId, setProduct } = userSlice.actions;\r\n\r\nexport const selectDisplayName = (state) => state.user.displayName;\r\nexport const selectProduct = (state) => state.user.product;\r\nexport const userId = (state) => state.user.userId;\r\nexport const setUserProfileAsync = (accessToken) => (dispatch) => {\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/me\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(setDisplayName(data.display_name ? data.display_name : \"\"));\r\n      dispatch(setUserId(data.id));\r\n      // we inject also userId in localStorage in order to reuse it easily\r\n      localStorage.setItem(\"userId\", data.id);\r\n      dispatch(setProduct(data.product));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      if (error) {\r\n        if (error.status === 401) {\r\n          dispatch(setLoggedIn(false));\r\n        }\r\n      }\r\n    });\r\n};\r\n\r\nexport default userSlice.reducer;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setLoggedIn,\r\n  setAccessToken,\r\n  setTokenExpiryDate,\r\n  selectIsLoggedIn,\r\n} from \"../../store/authentication/authenticationSlice\";\r\nimport { setUserProfileAsync } from \"../../store/user/userSlice\";\r\nimport { getAuthorizeHref } from \"../../oauthConfig\";\r\nimport { getHashParams, removeHashParamsFromUrl } from \"../../utils/hashUtils\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport \"./Authentication.scss\";\r\n\r\n// Here we register url values when getAuthorizeHref get the data from spotify api\r\nconst hashParams = getHashParams();\r\nconst access_token = hashParams.access_token;\r\nconst expires_in = hashParams.expires_in;\r\n// We clean hash\r\nremoveHashParamsFromUrl();\r\n\r\nconst Authentication = () => {\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (access_token) {\r\n      // We sending access Token to localStorage and other values to reducers\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      dispatch(setLoggedIn(true));\r\n      dispatch(setAccessToken(access_token));\r\n      dispatch(setTokenExpiryDate(Number(expires_in)));\r\n      dispatch(setUserProfileAsync(access_token));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {!isLoggedIn && (\r\n        <button\r\n          className=\"login__button\"\r\n          aria-label=\"Log in using OAuth 2.0\"\r\n          onClick={() => window.open(getAuthorizeHref(), \"_self\")}\r\n        >\r\n          Se connecter\r\n        </button>\r\n      )}\r\n      {\r\n        //When logged we navigate to home\r\n        isLoggedIn && <Navigate replace to=\"/home\" />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","export const getHashParams = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(function (initial, item) {\r\n      if (item) {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      }\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const removeHashParamsFromUrl = () => {\r\n  window.history.pushState(\r\n    \"\",\r\n    document.title,\r\n    window.location.pathname + window.location.search\r\n  );\r\n};\r\n","const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nexport const getAuthorizeHref = () => {\r\n  const scopes = [\r\n    \"user-read-private\",\r\n    \"playlist-modify-public\",\r\n    \"playlist-modify-private\",\r\n  ];\r\n  const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\n  const redirectUri = process.env.REACT_APP_REDIRECT_URI;\r\n  return `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    \"%20\"\r\n  )}&response_type=token`;\r\n};\r\n","import React from \"react\";\r\nimport { selectDisplayName } from \"../../store/user/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  const userName = useSelector(selectDisplayName);\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"home__title\">\r\n        Bienvenue {userName.charAt(0).toUpperCase() + userName.slice(1)}, vous\r\n        êtes bien connecté sur votre plateforme Spotify\r\n      </h1>\r\n      <div className=\"home__in-stagging\">\r\n        <p>\r\n          Page Home actuellement en rénovation, ajout des tendances globales et\r\n          par catégories de genre, bientôt disponible\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getAccessToken = () => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    return localStorage.getItem(\"accessToken\");\r\n  }\r\n};\r\nconst getUserId = () => {\r\n  if (localStorage.getItem(\"userId\")) {\r\n    return localStorage.getItem(\"userId\");\r\n  }\r\n};\r\nconst initialState = {\r\n  playlistsItems: [],\r\n  total: 0,\r\n};\r\n\r\nexport const playlistsSlice = createSlice({\r\n  name: \"playlists\",\r\n  initialState,\r\n  reducers: {\r\n    setPlaylistsItem: (state, action) => {\r\n      state.playlistsItems = action.payload;\r\n    },\r\n    setTotal: (state, action) => {\r\n      state.total = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPlaylistsItem, setTotal } = playlistsSlice.actions;\r\n\r\nexport const selectplaylistsItems = (state) => state.playlists.playlistsItems;\r\nexport const selectplaylistsTotal = (state) => state.playlists.total;\r\n\r\nexport const getUserPlaylists = () => (dispatch) => {\r\n  const accessToken = getAccessToken();\r\n  const userId = getUserId();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/users/\" + userId + \"/playlists\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(setPlaylistsItem(data.items));\r\n      dispatch(setTotal(data.total));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const createPlaylist = (value) => (dispatch) => {\r\n  const { name, description } = value;\r\n  const accessToken = getAccessToken();\r\n  const userId = getUserId();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: JSON.stringify({ name: name, description: description }),\r\n  }).then(\r\n    (response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    },\r\n    (networkError) => {\r\n      console.log(networkError.message);\r\n    }\r\n  );\r\n};\r\n\r\nexport const addTrackToPlaylist = (uris) => (dispatch) => {\r\n  const { uri, id } = uris;\r\n  const accessToken = getAccessToken();\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  return fetch(\r\n    `https://api.spotify.com/v1/playlists/${id}/tracks?uris=${uri}`,\r\n    {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n    }\r\n  ).then(\r\n    (response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    },\r\n    (networkError) => {\r\n      console.log(networkError.message);\r\n    }\r\n  );\r\n};\r\n\r\nexport default playlistsSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./Card.scss\";\r\n\r\nconst Card = (props) => {\r\n  const { image, uri, name, description, details } = props;\r\n  const style = {\r\n    background: \"url(\" + image + \") center center no-repeat\",\r\n    maxWidth: \"100%\",\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <header style={style} id={image} className=\"card__header\"></header>\r\n      <div className=\"card__body\">\r\n        <p className=\"card__date\">\r\n          Lien: <a href={uri}>{uri}</a>\r\n        </p>\r\n\r\n        <h2>{name}</h2>\r\n\r\n        <p className=\"card__content\">\r\n          {description ? description : \"Aucune description\"}\r\n        </p>\r\n        {details && (\r\n          <button className=\"button card__button-primary\">\r\n            <i className=\"fa fa-chevron-right\"></i> Voir le détail\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./UserPlaylists.scss\";\r\nimport Card from \"../../../layout/card/Card\";\r\nimport {\r\n  selectplaylistsItems,\r\n  getUserPlaylists,\r\n} from \"../../../store/playlists/playlistsSlice\";\r\n\r\nconst UserPlaylists = () => {\r\n  const playlists = useSelector(selectplaylistsItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserPlaylists());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"user-playlists\">\r\n      <div className=\"user-playlists__title\">\r\n        {\" \"}\r\n        <h2>Vos playlists</h2>\r\n      </div>\r\n      <div className=\"user-playlists__content\">\r\n        {playlists &&\r\n          playlists.map((item, index) => (\r\n            <div key={index}>\r\n              <Card\r\n                image={item.images[0] && item.images[0].url}\r\n                uri={item.uri}\r\n                name={item.name}\r\n                description={item.description}\r\n                details=\"true\"\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPlaylists;\r\n","import { useState } from \"react\";\r\nimport \"./CreatePlaylist.scss\";\r\n\r\nexport default function createPlaylist({\r\n  createPlayList,\r\n  cancelPlaylistCreation,\r\n  confirmPlaylistCreation,\r\n}) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isPlaylistCreated, setIsPlaylistCreated] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const createdPlaylist = {\r\n      name: name,\r\n      description: description,\r\n    };\r\n    createPlayList(createdPlaylist);\r\n    setIsPlaylistCreated(true);\r\n  };\r\n\r\n  const confirmCreation = () => {\r\n    confirmPlaylistCreation();\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    cancelPlaylistCreation();\r\n    setIsPlaylistCreated(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-playlist\">\r\n      <div className=\"create-playlist__title\">\r\n        <h2>Créer une playlist</h2>\r\n      </div>\r\n      <div className=\"create-playlist__form-container\">\r\n        <form className=\"create-playlist__form\" onSubmit={handleSubmit}>\r\n          <label className=\"create-playlist__form-label\">\r\n            Nom:\r\n            <input\r\n              type=\"text\"\r\n              id=\"outlined-basic\"\r\n              className=\"create-playlist__form-inputs\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n              disabled={isPlaylistCreated}\r\n            />\r\n          </label>\r\n          <label className=\"create-playlist__form-label\">\r\n            Description:\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"outlined-basic\"\r\n              className=\"create-playlist__form-inputs\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(event) => setDescription(event.target.value)}\r\n              disabled={isPlaylistCreated}\r\n            />\r\n          </label>\r\n          {isPlaylistCreated ? (\r\n            <>\r\n              <input\r\n                className=\"create-playlist__button create-playlist__button-validate\"\r\n                type=\"button\"\r\n                value=\"Valider la playlist\"\r\n                onClick={() => confirmCreation()}\r\n              />\r\n              <input\r\n                className=\"create-playlist__button create-playlist__button-cancel\"\r\n                type=\"button\"\r\n                value=\"Annuler\"\r\n                onClick={() => reset()}\r\n              />\r\n            </>\r\n          ) : (\r\n            <input\r\n              className=\"create-playlist__button create-playlist__button-create\"\r\n              type=\"submit\"\r\n              value=\"Créer la playlist\"\r\n              disabled={!name || !description}\r\n            />\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./CreatePlaylistModel.scss\";\r\nimport Card from \"../../../layout/card/Card\";\r\n\r\nconst CreatePlaylistModel = (props) => {\r\n  const { name, description, image, uri, details } = props;\r\n  return (\r\n    <div className=\"create-playlist-model\">\r\n      <div className=\"create-playlist-model__title\">\r\n        {\" \"}\r\n        <h2>Récapitulatif</h2>\r\n      </div>\r\n      <div className=\"create-playlist-model__content\">\r\n        <Card\r\n          image={image}\r\n          uri={uri}\r\n          name={name}\r\n          description={description}\r\n          details={details}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePlaylistModel;\r\n","import { useState } from \"react\";\r\nimport \"./Playlists.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPlaylist } from \"../../store/playlists/playlistsSlice\";\r\nimport UserPlaylists from \"../../components/playlists/userPlaylists/UserPlaylists\";\r\nimport CreatePlaylist from \"../../components/playlists/createPlaylist/CreatePlaylist\";\r\nimport CreatePlaylistModel from \"../../components/playlists/createPlaylistModel/CreatePlaylistModel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Playlists = () => {\r\n  const [createdPlaylistInfo, setCreatedPlaylistInfo] = useState({});\r\n  const [isCreateButtonDisabled, setIsCreateButtonDisabled] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const validatePlaylist = (value) => {\r\n    setCreatedPlaylistInfo(value);\r\n  };\r\n  const confirmPlaylistCreation = () => {\r\n    dispatch(createPlaylist(createdPlaylistInfo))\r\n      .then(() => {\r\n        toast.success(\"La playlist a bien été créee !\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${error.message} !`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      });\r\n  };\r\n  const cancelPlaylistCreation = () => {\r\n    setCreatedPlaylistInfo({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlists\">\r\n      <div className=\"playlists__content\">\r\n        <UserPlaylists />\r\n        <CreatePlaylist\r\n          createPlayList={validatePlaylist}\r\n          cancelPlaylistCreation={cancelPlaylistCreation}\r\n          setCreateDisabled={isCreateButtonDisabled}\r\n          confirmPlaylistCreation={confirmPlaylistCreation}\r\n        />\r\n        {createdPlaylistInfo.name && (\r\n          <CreatePlaylistModel\r\n            name={createdPlaylistInfo.name}\r\n            description={createdPlaylistInfo.description}\r\n          />\r\n        )}\r\n      </div>\r\n      {/* Tag below is necessary to display toast message*/}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","import React from \"react\";\r\nimport \"./SearchResultItem.scss\";\r\n\r\nconst SearchResultItem = ({ track, modalCallback }) => {\r\n  const handleParentCallback = () => {\r\n    modalCallback(track);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-result-item\">\r\n      <span className=\"search-result-item__image\">\r\n        <img src={track.albumUrl} />{\" \"}\r\n      </span>\r\n      <div>\r\n        <div>\r\n          {\" \"}\r\n          <span className=\"search-result-item__text\">{track.title}</span>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <span className=\"search-result-item__artist\">{track.artist}</span>\r\n        </div>\r\n        <button\r\n          className=\"search-result-item__button\"\r\n          onClick={handleParentCallback}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultItem;\r\n","import React from \"react\";\r\nimport \"./SearchResult.scss\";\r\nimport SearchResultItem from \"../searchResultItem/SearchResultItem\";\r\n\r\nconst SearchResult = ({ searchResults, modalCallback }) => {\r\n  return (\r\n    <div className=\"search-result\">\r\n      {searchResults.map((track, index) => (\r\n        <SearchResultItem\r\n          track={track}\r\n          key={index}\r\n          modalCallback={modalCallback}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddTrackModal.scss\";\r\n\r\nconst AddTrackModal = ({ setIsOpen, playlists, track, addTrackToPlaylist }) => {\r\n  const [checkedPlaylist, setCheckedPlaylist] = useState(false);\r\n\r\n  const handleChange = (value) => {\r\n    setCheckedPlaylist(value);\r\n  };\r\n\r\n  const AddTrackCallback = () => {\r\n    addTrackToPlaylist(track, checkedPlaylist);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-track-modal\">\r\n        <div className=\"add-track-modal__modal\">\r\n          <div>\r\n            <h2 className=\"add-track-modal__title\">\r\n              Ajouter le titre à une playlist\r\n            </h2>\r\n            <div className=\"add-track-modal__subtitle\">\r\n              Sélectionner la playlist\r\n            </div>\r\n          </div>\r\n          <div className=\"add-track-modal__playlists\">\r\n            {playlists &&\r\n              playlists.map((playlist, index) => {\r\n                return (\r\n                  <div key={index} className=\"add-track-modal__playlists-items\">\r\n                    <span>{playlist.name}</span>{\" \"}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={playlist.id}\r\n                      checked={checkedPlaylist === playlist}\r\n                      onChange={() => handleChange(playlist)}\r\n                    ></input>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div>\r\n            <div className=\"add-track-modal__actions\">\r\n              <button\r\n                className=\"cancel-button\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                Annuler\r\n              </button>\r\n              <button\r\n                className=\"validate-button\"\r\n                onClick={() => AddTrackCallback()}\r\n              >\r\n                Valider\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTrackModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchResult from \"../../components/search/searchResult/SearchResult\";\r\nimport AddTrackModal from \"../../components/modal/AddTrackModal\";\r\nimport \"./Search.scss\";\r\nimport {\r\n  selectplaylistsItems,\r\n  getUserPlaylists,\r\n  addTrackToPlaylist,\r\n} from \"../../store/playlists/playlistsSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Search = () => {\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // const [trackUri, setTrackUri] = useState(\"\");\r\n  const [track, setTrack] = useState(\"\");\r\n  const playlists = useSelector(selectplaylistsItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserPlaylists());\r\n  }, []);\r\n\r\n  const isModalOpen = (value) => {\r\n    setTrack(value);\r\n    return setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n      params: {\r\n        q: search,\r\n        type: \"track\",\r\n      },\r\n    };\r\n    axios.get(\"https://api.spotify.com/v1/search\", config).then((res) => {\r\n      setSearchResults(\r\n        res.data.tracks.items.map((track) => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image;\r\n              return smallest;\r\n            },\r\n            track.album.images[0]\r\n          );\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          };\r\n        })\r\n      );\r\n    });\r\n  }, [search]);\r\n\r\n  const addTrack = (track, checkedPlaylist) => {\r\n    const { title, uri, ...trackRest } = track;\r\n    const { id, name, ...playlistRest } = checkedPlaylist;\r\n\r\n    dispatch(addTrackToPlaylist({ uri, id }))\r\n      .then(() => {\r\n        toast.success(`${title} a bien été ajouté à ${name} !`, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${error.message} !`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        isModalOpen();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"search__input\"\r\n        type=\"search\"\r\n        placeholder=\"Rechercher un titre\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <SearchResult searchResults={searchResults} modalCallback={isModalOpen} />\r\n\r\n      {isOpen && (\r\n        <AddTrackModal\r\n          setIsOpen={isModalOpen}\r\n          playlists={playlists}\r\n          // trackUri={trackUri}\r\n          track={track}\r\n          addTrackToPlaylist={addTrack}\r\n        />\r\n      )}\r\n      {/* Tag below is necessary to display toast message*/}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/spotify-logo.056948ef.png\";","import { useState } from \"react\";\r\nimport \"./SideBar.scss\";\r\nimport spotifyLogo from \"../../assets/images/spotify-logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faMagnifyingGlass,\r\n  faFolder,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport KeyboardDoubleArrowLeftIcon from \"@mui/icons-material/KeyboardDoubleArrowLeft\";\r\n\r\nexport default function Sidebar() {\r\n  const [open, setopen] = useState(true);\r\n  const toggleOpen = () => {\r\n    setopen(!open);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={open ? \"sidebar\" : \"sidebar sidebar--closed\"}>\r\n        <div className=\"sidebar__top-links\">\r\n          <div className=\"sidebar__logo\">\r\n            <img\r\n              src={spotifyLogo}\r\n              alt=\"spotify\"\r\n              className={\r\n                open\r\n                  ? \"sidebar__logo-img\"\r\n                  : \"sidebar__logo-img sidebar__logo-img--closed\"\r\n              }\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              open\r\n                ? \"sidebar__menu-toggle\"\r\n                : \"sidebar__menu-toggle sidebar__menu-toggle--closed\"\r\n            }\r\n            onClick={toggleOpen}\r\n          >\r\n            {open ? (\r\n              <KeyboardDoubleArrowLeftIcon />\r\n            ) : (\r\n              <KeyboardDoubleArrowRightIcon />\r\n            )}\r\n          </button>\r\n          <ul className=\"sidebar__list-items\">\r\n            <li>\r\n              <NavLink to=\"/home\" className=\"sidebar__nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faHome} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  Accueil\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/search\" className=\"sidebar__nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  Rechercher\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/playlists\" className=\"nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faFolder} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  Vos playlists\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Authentication from \"./pages/authentication/Authentication\";\r\nimport Home from \"./pages/home/Home\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Playlists from \"./pages/playlists/Playlists\";\r\nimport Search from \"./pages/search/Search\";\r\nimport Sidebar from \"./components/SideBar/SideBar\";\r\nimport { selectIsLoggedIn } from \"./store/authentication/authenticationSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {isLoggedIn ? <Sidebar /> : null}\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Authentication />} />\r\n          <Route exact path=\"/playlists\" element={<Playlists />} />\r\n          <Route exact path=\"/home\" element={<Home />} />\r\n          <Route exact path=\"/search\" element={<Search />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authenticationReducer from \"./authentication/authenticationSlice\";\r\nimport playlistsReducer from \"./playlists/playlistsSlice\";\r\nimport userReducer from \"./user/userSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authorization: authenticationReducer,\r\n    user: userReducer,\r\n    playlists: playlistsReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}