{"version":3,"sources":["store/authentication/authenticationSlice.js","store/user/userSlice.js","Constants.js","pages/authentication/authentication.js","utils/hashUtils.js","oauthConfig.js","store/user/user.selectors.js","conf/api.user.js","store/user/user.actions.js","components/home/recentlyPlayed/recentlyPlayed/RecentlyPlayed.js","components/utils/Loading.js","pages/home/Home.js","store/playlists/playlistsSlice.js","layout/card/Card.jsx","components/playlists/userPlaylists/UserPlaylists.js","components/playlists/createPlaylist/CreatePlaylist.jsx","components/playlists/createPlaylistModel/CreatePlaylistModel.js","pages/playlists/Playlists.jsx","components/search/searchResultItem/SearchResultItem.jsx","components/search/searchResult/SearchResult.jsx","components/modal/AddTrackModal.js","pages/search/Search.jsx","assets/images/spotify-logo.png","components/SideBar/SideBar.jsx","App.js","serviceWorker.js","store/artists/artistsSlice.js","store/reducers.js","store/user/user.reducers.js","store/index.js","index.js"],"names":["authenticationSlice","createSlice","name","initialState","loggedIn","accessToken","tokenExpiryDate","reducers","setLoggedIn","state","action","payload","setAccessToken","setTokenExpiryDate","date","Date","setSeconds","getSeconds","toISOString","actions","setUserId","selectIsLoggedIn","authorization","userSlice","displayName","userId","product","recentlyPlayed","setDisplayName","setProduct","setRecentlyPlayed","config","url","API_URL","hashParams","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","expires_in","history","pushState","document","title","pathname","search","Authentication","isLoggedIn","useSelector","dispatch","useDispatch","useEffect","localStorage","setItem","Number","myHeaders","Headers","append","fetch","method","headers","then","response","json","data","display_name","id","catch","error","console","log","status","className","onClick","open","redirectUri","process","join","getAuthorizeHref","replace","to","lastActivitySelector","user","lastActivityIsLoadingSelector","createSelector","isLoading","lastActivityListSelector","apiSpotify","axios","baseURL","getItem","getAccessToken","interceptors","request","use","req","get","items","REQUEST_LAST_ACTIVITY","FETCH_LAST_ACTIVITY_SUCCESS","FETCH_LAST_ACTIVITY_ERROR","RecentlyPlayed","props","songs","map","src","track","album","images","alt","style","width","num","duration_ms","Math","floor","played_at","toLocaleDateString","minHeight","display","flexDirection","justifyContent","alignItems","connect","getLastActivity","type","apiUserRequest","fetchRecentActivitySuccess","fetchRecentActivityError","Loading","getUserId","playlistsSlice","playlistsItems","total","setPlaylistsItem","setTotal","selectplaylistsItems","playlists","getUserPlaylists","Card","image","uri","description","details","background","maxWidth","href","UserPlaylists","index","createPlaylist","createPlayList","cancelPlaylistCreation","confirmPlaylistCreation","useState","setName","setDescription","isPlaylistCreated","setIsPlaylistCreated","reset","onSubmit","evt","preventDefault","value","onChange","event","target","disabled","CreatePlaylistModel","Playlists","createdPlaylistInfo","setCreatedPlaylistInfo","isCreateButtonDisabled","setCreateDisabled","body","JSON","stringify","ok","Error","networkError","message","toast","success","position","POSITION","TOP_RIGHT","TOP_CENTER","SearchResultItem","modalCallback","albumUrl","artist","SearchResult","searchResults","AddTrackModal","setIsOpen","addTrackToPlaylist","checkedPlaylist","setCheckedPlaylist","playlist","checked","Search","setSearch","setSearchResults","isOpen","setTrack","isModalOpen","Authorization","params","q","res","tracks","smallestAlbumImage","smallest","height","artists","placeholder","e","uris","finally","Sidebar","setopen","spotifyLogo","icon","faHome","faMagnifyingGlass","faFolder","App","exact","path","element","Boolean","hostname","match","artistsSlice","topUserArtist","setTopUserArtist","appReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sMAOaA,EAAsBC,YAAY,CAC7CC,KAAM,gBACNC,aAPmB,CACnBC,UAAU,EACVC,YAAa,GACbC,gBAAiB,IAKjBC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAML,SAAWM,EAAOC,OACzB,EACDC,eAAgB,SAACH,EAAOC,GACtBD,EAAMJ,YAAcK,EAAOC,OAC5B,EACDE,mBAAoB,SAACJ,EAAOC,GAC1B,IAAMI,EAAO,IAAIC,KACjBD,EAAKE,WAAWF,EAAKG,aAAeP,EAAOC,SAC3CF,EAAMH,gBAAkBQ,EAAKI,aAC9B,KAIE,EACLlB,EAAoBmB,QADPX,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,eAA2BC,GAAhD,EAAqCO,UAArC,EAAgDP,oBAG1CQ,EAAmB,SAACZ,GAAD,OAAWA,EAAMa,cAAclB,QAA/B,EAKjBJ,IAAf,QCjBauB,EAAYtB,YAAY,CACnCC,KAAM,OACNC,aATmB,CACnBqB,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTC,eAAgB,IAMhBpB,SAAU,CACRqB,eAAgB,SAACnB,EAAOC,GACtBD,EAAMe,YAAcd,EAAOC,OAC5B,EACDS,UAAW,SAACX,EAAOC,GACjBD,EAAMgB,OAASf,EAAOC,OACvB,EACDkB,WAAY,SAACpB,EAAOC,GAClBD,EAAMiB,QAAUhB,EAAOC,OACxB,EACDmB,kBAAmB,SAACrB,EAAOC,GACzBD,EAAMkB,eAAiBjB,EAAOC,OAC/B,KAIE,EACLY,EAAUJ,QADGS,EAAR,EAAQA,eAAgBR,EAAxB,EAAwBA,UAAWS,EAAnC,EAAmCA,WCzB7BE,GDyBN,EAA+CD,kBAsDvCP,EAAf,QCzFa,CACXS,IAAK,CACHC,QAAS,oD,sBCaPC,ECdGC,OAAOC,SAASC,KACpBC,UAAU,GACVC,MAAM,KACNC,QAAO,SAAUC,EAASC,GACzB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,GAC9C,CACD,OAAOF,CACR,GAAE,CAAC,GDMFI,EAAeX,EAAWW,aAC1BC,EAAaZ,EAAWY,WCH5BX,OAAOY,QAAQC,UACb,GACAC,SAASC,MACTf,OAAOC,SAASe,SAAWhB,OAAOC,SAASgB,QDI/C,IAkCeC,EAlCQ,WACrB,IAAMC,EAAaC,YAAYlC,GACzBmC,EAAWC,cAajB,OAXAC,qBAAU,WFkBuB,IAACrD,EEjB5BwC,IAEFc,aAAaC,QAAQ,cAAef,GACpCW,EAAShD,GAAY,IACrBgD,EAAS5C,EAAeiC,IACxBW,EAAS3C,EAAmBgD,OAAOf,KACnCU,GFW8BnD,EEXDwC,EFWiB,SAACW,GACnD,IAAMM,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAiB,UAAY3D,GAE9C4D,MAAM,gCAAiC,CACrCC,OAAQ,MACRC,QAASL,IAERM,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACLf,EAAS5B,EAAe2C,EAAKC,aAAeD,EAAKC,aAAe,KAChEhB,EAASpC,EAAUmD,EAAKE,KAExBd,aAAaC,QAAQ,SAAUW,EAAKE,IACpCjB,EAAS3B,EAAW0C,EAAK7C,SAC1B,IACAgD,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACRA,GACmB,MAAjBA,EAAMG,QACRtB,EAAShD,GAAY,GAG1B,GACJ,IEjCE,GAAE,IAGD,sBAAKuE,UAAU,QAAf,WACIzB,GACA,wBACEyB,UAAU,gBACV,aAAW,yBACXC,QAAS,kBAAM7C,OAAO8C,KEvCA,WAC9B,IAQMC,EAAcnD,EAAOC,IAAIC,QAC/B,MAAM,GAAN,OAZmB,yCAYnB,sBAFiBkD,mCAEjB,yBAA6DD,EAA7D,kBATe,CACb,oBACA,yBACA,0BACA,4BACA,iBAIuFE,KACvF,OADF,uBAGD,CF0BoCC,GAAoB,QAAtC,EAHX,0BAUA/B,GAAc,cAAC,IAAD,CAAUgC,SAAO,EAACC,GAAG,YAI1C,E,gBGnDYC,EAAuB,SAAC/E,GAAD,OAAWA,EAAMgF,IAAjB,EAEvBC,EAAgCC,YAC3C,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,SAAf,IAGWC,EAA2BF,YACtC,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKlB,IAAf,I,iBCTIuB,EAAaC,SAAa,CAC9BC,QAAS,gCAOL3F,EALiB,WACrB,GAAIsD,aAAasC,QAAQ,eACvB,OAAOtC,aAAasC,QAAQ,cAE/B,CACmBC,GAEpBJ,EAAWK,aAAaC,QAAQC,KAAI,SAACC,GAEnC,OADAA,EAAInC,QAAJ,+BAAyC9D,GAClCiG,CACR,IAEc,MACI,kBACfR,EACGS,IAAI,6BACJnC,MAAK,SAACC,GAAD,OAAeA,EAASE,KAAKiC,MAAQnC,EAASE,KAAKiC,MAAQ,EAA3D,GAHO,EChBNC,EAAwB,wBAExBC,EAA8B,8BAC9BC,EAA4B,4BCmC1BC,G,MApCQ,SAACC,GACtBnD,qBAAU,WACRkB,QAAQC,IAAIgC,EACb,GAAE,IAQH,OACE,sBAAK9B,UAAU,kBAAf,UACE,oBAAIA,UAAU,yBAAd,0CACA,qBAAKA,UAAU,2BAAf,SACG8B,EAAMC,OACLD,EAAMC,MAAMC,KAAI,SAACrE,GAAD,OACd,sBAAKqC,UAAU,yBAAf,UACE,4BACE,qBACEiC,IAAKtE,EAAKuE,MAAMC,MAAMC,OAAO,GAAGnF,IAChCoF,IAAI,GACJC,MAAO,CAAEC,MAAO,YAGpB,mBAAGvC,UAAU,8BAAb,SAA4CrC,EAAKuE,MAAM/G,OAEvD,6BAtBSqH,EAsBO7E,EAAKuE,MAAMO,YArBrBC,KAAKC,MAAMH,EAAM,KAEhB,IADAA,EAAM,MAqBb,4BAAI,IAAIxG,KAAK2B,EAAKiF,WAAWC,mBAAmB,UAXLlF,EAAKuE,MAAMxC,IAZ9C,IAAC8C,CAWG,QAkBzB,GCpCc,aACb,OACE,qBACEF,MAAO,CACLQ,UAAW,QACXC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZX,MAAO,QAPX,SAUE,qBAAKF,IAAI,cAAcJ,IAAI,wCAZjC,ECqCekB,eACb,SAACzH,GAAD,MAAY,CACVmF,UAAWF,EAA8BjF,GACzCgF,KAAMI,EAAyBpF,GAFjC,GAIA,CACE0H,gBHxB2B,kBAAM,SAAC3E,GAEpC,OADAA,EAf0C,CAC1C4E,KAAM3B,IAeC4B,IAAiCjE,MACtC,SAACqB,GAAD,OAAUjC,EAb4B,SAACiC,GAAD,MAAW,CACnD2C,KAAM1B,EACNjB,OAFwC,CAanB6C,CAA2B7C,GAA9C,IACA,SAACd,GAAD,OAAWnB,EATyB,SAACmB,GAAD,MAAY,CAClDyD,KAAMzB,EACNhC,QAFsC,CAShB4D,CAAyB5D,GAA7C,GAEH,CAN8B,GGkBhBuD,EA1BF,SAACrB,GAQZ,OAHAnD,qBAAU,WACRmD,EAAMsB,iBACP,GAAE,IAED,mCACGtB,EAAMjB,UACL,cAAC4C,EAAD,IAEA,sBAAKzD,UAAU,OAAf,UACE,qBAAIA,UAAU,cAAd,sBACY,IADZ,kEAKA,cAAC,EAAD,CAAgB+B,MAAOD,EAAMpB,WAKtC,I,eCnCKS,G,MAAiB,WACrB,GAAIvC,aAAasC,QAAQ,eACvB,OAAOtC,aAAasC,QAAQ,cAE/B,GACKwC,EAAY,WAChB,GAAI9E,aAAasC,QAAQ,UACvB,OAAOtC,aAAasC,QAAQ,SAE/B,EAMYyC,EAAiBzI,YAAY,CACxCC,KAAM,YACNC,aAPmB,CACnBwI,eAAgB,GAChBC,MAAO,GAMPrI,SAAU,CACRsI,iBAAkB,SAACpI,EAAOC,GACxBD,EAAMkI,eAAiBjI,EAAOC,OAC/B,EACDmI,SAAU,SAACrI,EAAOC,GAChBD,EAAMmI,MAAQlI,EAAOC,OACtB,KAIE,EAAuC+H,EAAevH,QAA9C0H,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,SAEpBC,EAAuB,SAACtI,GAAD,OAAWA,EAAMuI,UAAUL,cAA3B,EAGvBM,EAAmB,kBAAM,SAACzF,GACrC,IAAMnD,EAAc6F,IACdzE,EAASgH,IAET3E,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAiB,UAAY3D,GAE9C4D,MAAM,oCAAsCxC,EAAS,aAAc,CACjEyC,OAAQ,MACRC,QAASL,IAERM,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACLf,EAASqF,EAAiBtE,EAAKiC,QAC/BhD,EAASsF,EAASvE,EAAKqE,OACxB,IACAlE,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACb,GACJ,CAnB+B,EAuEjB+D,IAAf,QC3EeQ,I,YA5BF,SAACrC,GACZ,IAAQsC,EAA2CtC,EAA3CsC,MAAOC,EAAoCvC,EAApCuC,IAAKlJ,EAA+B2G,EAA/B3G,KAAMmJ,EAAyBxC,EAAzBwC,YAAaC,EAAYzC,EAAZyC,QACjCjC,EAAQ,CACZkC,WAAY,OAASJ,EAAQ,4BAC7BK,SAAU,QAEZ,OACE,sBAAKzE,UAAU,OAAf,UACE,wBAAQsC,MAAOA,EAAO5C,GAAI0E,EAAOpE,UAAU,iBAC3C,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,aAAb,mBACQ,mBAAG0E,KAAML,EAAT,SAAeA,OAGvB,6BAAKlJ,IAEL,mBAAG6E,UAAU,gBAAb,SACGsE,GAA4B,uBAE9BC,GACC,yBAAQvE,UAAU,8BAAlB,UACE,mBAAGA,UAAU,wBADf,6BAOT,GCWc2E,GAhCO,WACpB,IAAMV,EAAYzF,YAAYwF,GACxBvF,EAAWC,cAMjB,OAJAC,qBAAU,WACRF,EAASyF,IACV,GAAE,IAGD,sBAAKlE,UAAU,iBAAf,UACE,sBAAKA,UAAU,wBAAf,UACG,IACD,kDAEF,qBAAKA,UAAU,0BAAf,SACGiE,GACCA,EAAUjC,KAAI,SAACrE,EAAMiH,GAAP,OACZ,8BACE,cAAC,GAAD,CACER,MAAOzG,EAAKyE,OAAO,IAAMzE,EAAKyE,OAAO,GAAGnF,IACxCoH,IAAK1G,EAAK0G,IACVlJ,KAAMwC,EAAKxC,KACXmJ,YAAa3G,EAAK2G,YAClBC,QAAQ,UANFK,EADE,QAcvB,E,MCpCc,SAASC,GAAT,GAIX,IAHFC,EAGC,EAHDA,eACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,wBAEA,EAAwBC,mBAAS,IAAjC,mBAAO9J,EAAP,KAAa+J,EAAb,KACA,EAAsCD,mBAAS,IAA/C,mBAAOX,EAAP,KAAoBa,EAApB,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAiBMC,EAAQ,WACZJ,EAAQ,IACRC,EAAe,IACfJ,IACAM,GAAqB,EACtB,EAED,OACE,sBAAKrF,UAAU,kBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,yDAEF,qBAAKA,UAAU,kCAAf,SACE,uBAAMA,UAAU,wBAAwBuF,SA5BzB,SAACC,GACpBA,EAAIC,iBAKJX,EAJwB,CACtB3J,KAAMA,EACNmJ,YAAaA,IAGfe,GAAqB,EACtB,EAoBK,UACE,wBAAOrF,UAAU,8BAAjB,iBAEE,uBACEqD,KAAK,OACL3D,GAAG,iBACHM,UAAU,+BACV7E,KAAK,OACLuK,MAAOvK,EACPwK,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAMC,OAAOH,MAAhC,EACVI,SAAUV,OAGd,wBAAOpF,UAAU,8BAAjB,yBAEE,0BACEqD,KAAK,OACL3D,GAAG,iBACHM,UAAU,+BACV7E,KAAK,cACLuK,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAWT,EAAeS,EAAMC,OAAOH,MAAvC,EACVI,SAAUV,OAGbA,EACC,qCACE,uBACEpF,UAAU,2DACVqD,KAAK,SACLqC,MAAM,sBACNzF,QAAS,kBAhDrB+E,SACAM,GA+CqB,IAEX,uBACEtF,UAAU,yDACVqD,KAAK,SACLqC,MAAM,UACNzF,QAAS,kBAAMqF,GAAN,OAIb,uBACEtF,UAAU,yDACVqD,KAAK,SACLqC,MAAM,uBACNI,UAAW3K,IAASmJ,WAOjC,C,UCpEcyB,GArBa,SAACjE,GAC3B,IAAQ3G,EAA2C2G,EAA3C3G,KAAMmJ,EAAqCxC,EAArCwC,YAAaF,EAAwBtC,EAAxBsC,MAAOC,EAAiBvC,EAAjBuC,IAAKE,EAAYzC,EAAZyC,QACvC,OACE,sBAAKvE,UAAU,wBAAf,UACE,sBAAKA,UAAU,+BAAf,UACG,IACD,qDAEF,qBAAKA,UAAU,iCAAf,SACE,cAAC,GAAD,CACEoE,MAAOA,EACPC,IAAKA,EACLlJ,KAAMA,EACNmJ,YAAaA,EACbC,QAASA,QAKlB,E,SCqCcyB,I,MAjDG,WAChB,MAAsDf,mBAAS,CAAC,GAAhE,mBAAOgB,EAAP,KAA4BC,EAA5B,KACA,EAA4DjB,oBAAS,GAArE,mBAAOkB,EAAP,KAEM1H,GAFN,KAEiBC,eAsBjB,OACE,sBAAKsB,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CACE8E,eAzBiB,SAACY,GACxBQ,EAAuBR,EACxB,EAwBOX,uBAVuB,WAC7BmB,EAAuB,CAAC,EACzB,EASOE,kBAAmBD,EACnBnB,wBAzBwB,WLqCJ,IAACU,EKpC3BjH,GLoC2BiH,EKpCHO,ELoCa,SAACxH,GACxC,IAAQtD,EAAsBuK,EAAtBvK,KAAMmJ,EAAgBoB,EAAhBpB,YACRhJ,EAAc6F,IACdzE,EAASgH,IAET3E,EAAY,IAAIC,QAGtB,OAFAD,EAAUE,OAAO,gBAAiB,UAAY3D,GAEvC4D,MAAM,oCAAD,OAAqCxC,EAArC,cAAyD,CACnEyC,OAAQ,OACRC,QAASL,EACTsH,KAAMC,KAAKC,UAAU,CAAEpL,KAAMA,EAAMmJ,YAAaA,MAC/CjF,MACD,SAACC,GACC,GAAIA,EAASkH,GACX,OAAOlH,EAASC,OAElB,MAAM,IAAIkH,MAAM,kBACjB,IACD,SAACC,GACC7G,QAAQC,IAAI4G,EAAaC,QAC1B,GAEJ,IK1DMtH,MAAK,WACJuH,KAAMC,QAAQ,0CAAkC,CAC9CC,SAAUF,KAAMG,SAASC,WAE5B,IACArH,OAAM,SAACC,GACNgH,KAAMhH,MAAN,UAAeA,EAAM+G,QAArB,MAAkC,CAChCG,SAAUF,KAAMG,SAASE,YAE5B,GACJ,IAeMhB,EAAoB9K,MACnB,cAAC,GAAD,CACEA,KAAM8K,EAAoB9K,KAC1BmJ,YAAa2B,EAAoB3B,iBAKvC,cAAC,KAAD,MAGL,G,SCxBc4C,I,YA9BU,SAAC,GAA8B,IAA5BhF,EAA2B,EAA3BA,MAAOiF,EAAoB,EAApBA,cAKjC,OACE,sBAAKnH,UAAU,qBAAf,UACE,uBAAMA,UAAU,4BAAhB,UACE,qBAAKiC,IAAKC,EAAMkF,WAAa,OAE/B,gCACE,gCACG,IACD,sBAAMpH,UAAU,2BAAhB,SAA4CkC,EAAM/D,WAEpD,gCACG,IACD,sBAAM6B,UAAU,6BAAhB,SAA8CkC,EAAMmF,YAEtD,wBACErH,UAAU,6BACVC,QApBqB,WAC3BkH,EAAcjF,EACf,EAgBK,oBASP,GCbcoF,GAdM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeJ,EAAoB,EAApBA,cACrC,OACE,qBAAKnH,UAAU,gBAAf,SACGuH,EAAcvF,KAAI,SAACE,EAAO0C,GAAR,OACjB,cAAC,GAAD,CACE1C,MAAOA,EAEPiF,cAAeA,GADVvC,EAHU,KASxB,ECgDc4C,I,MA7DO,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,UAAWxD,EAA2C,EAA3CA,UAAW/B,EAAgC,EAAhCA,MAAOwF,EAAyB,EAAzBA,mBACpD,EAA8CzC,oBAAS,GAAvD,mBAAO0C,EAAP,KAAwBC,EAAxB,KAUA,OACE,mCACE,qBAAK5H,UAAU,kBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,gCACE,oBAAIA,UAAU,yBAAd,gDAGA,qBAAKA,UAAU,4BAAf,4CAIF,qBAAKA,UAAU,6BAAf,SACGiE,GACCA,EAAUjC,KAAI,SAAC6F,EAAUjD,GACvB,OACE,sBAAiB5E,UAAU,mCAA3B,UACE,+BAAO6H,EAAS1M,OAAa,IAC7B,uBACEkI,KAAK,WACLqC,MAAOmC,EAASnI,GAChBoI,QAASH,IAAoBE,EAC7BlC,SAAU,WA7B5BiC,EA6B+CC,EAAnB,MANJjD,EAUb,MAEL,8BACE,sBAAK5E,UAAU,2BAAf,UACE,wBACEA,UAAU,gBACVC,QAAS,kBAAMwH,GAAU,EAAhB,EAFX,qBAMA,wBACEzH,UAAU,kBACVC,QAAS,WAzCrByH,EAAmBxF,EAAOyF,EAyCL,EAFX,gCAYb,G,4CCgDcI,GAhGA,WACb,IAAMzM,EAAcsD,aAAasC,QAAQ,eACzC,EAA4B+D,mBAAS,IAArC,mBAAO5G,EAAP,KAAe2J,EAAf,KACA,EAA0C/C,mBAAS,IAAnD,mBAAOsC,EAAP,KAAsBU,EAAtB,KACA,EAA4BhD,oBAAS,GAArC,mBAAOiD,EAAP,KAAeT,EAAf,KAEA,EAA0BxC,mBAAS,IAAnC,mBAAO/C,EAAP,KAAciG,EAAd,KACMlE,EAAYzF,YAAYwF,GACxBvF,EAAWC,cAEjBC,qBAAU,WACRF,EAASyF,IACV,GAAE,IAEH,IAAMkE,EAAc,SAAC1C,GAEnB,OADAyC,EAASzC,GACF+B,GAAWS,EACnB,EAEDvJ,qBAAU,WACR,IAAKN,EAAQ,OAAO4J,EAAiB,IAErC,IAAIjL,EAAS,CACXoC,QAAS,CAAEiJ,cAAc,UAAD,OAAY/M,IACpCgN,OAAQ,CACNC,EAAGlK,EACHgF,KAAM,UAGVrC,IAAMQ,IAAI,oCAAqCxE,GAAQqC,MAAK,SAACmJ,GAC3DP,EACEO,EAAIhJ,KAAKiJ,OAAOhH,MAAMO,KAAI,SAACE,GACzB,IAAMwG,EAAqBxG,EAAMC,MAAMC,OAAO3E,QAC5C,SAACkL,EAAUvE,GACT,OAAIA,EAAMwE,OAASD,EAASC,OAAexE,EACpCuE,CACR,GACDzG,EAAMC,MAAMC,OAAO,IAErB,MAAO,CACLiF,OAAQnF,EAAM2G,QAAQ,GAAG1N,KACzBgD,MAAO+D,EAAM/G,KACbkJ,IAAKnC,EAAMmC,IACX+C,SAAUsB,EAAmBzL,IAEhC,IAEJ,GACF,GAAE,CAACoB,IAsBJ,OACE,sBAAK2B,UAAU,SAAf,UACE,uBACEA,UAAU,gBACVqD,KAAK,SACLyF,YAAY,sBACZpD,MAAOrH,EACPsH,SAAU,SAACoD,GAAD,OAAOf,EAAUe,EAAElD,OAAOH,MAA1B,IAEZ,cAAC,GAAD,CAAc6B,cAAeA,EAAeJ,cAAeiB,IAE1DF,GACC,cAAC,GAAD,CACET,UAAWW,EACXnE,UAAWA,EAEX/B,MAAOA,EACPwF,mBArCS,SAACxF,EAAOyF,GACvB,ITgB+BqB,EShBvB7K,EAA6B+D,EAA7B/D,MAAOkG,EAAsBnC,EAAtBmC,IACP3E,GADR,aAAqCwC,EAArC,IACsCyF,EAA9BjI,IAAIvE,EAA0BwM,EAA1BxM,KAAZ,aAAsCwM,EAAtC,IAEAlJ,GTa+BuK,ESbH,CAAE3E,MAAK3E,MTaK,SAACjB,GAC3C,IAAQ4F,EAAY2E,EAAZ3E,IAAK3E,EAAOsJ,EAAPtJ,GACPpE,EAAc6F,IACdpC,EAAY,IAAIC,QAGtB,OAFAD,EAAUE,OAAO,gBAAiB,UAAY3D,GAEvC4D,MAAM,wCAAD,OAC8BQ,EAD9B,wBACgD2E,GAC1D,CACElF,OAAQ,OACRC,QAASL,IAEXM,MACA,SAACC,GACC,GAAIA,EAASkH,GACX,OAAOlH,EAASC,OAElB,MAAM,IAAIkH,MAAM,kBACjB,IACD,SAACC,GACC7G,QAAQC,IAAI4G,EAAaC,QAC1B,GAEJ,ISnCMtH,MAAK,WACJuH,KAAMC,QAAN,UAAiB1I,EAAjB,4CAA8ChD,EAA9C,MAAwD,CACtD2L,SAAUF,KAAMG,SAASC,WAE5B,IACArH,OAAM,SAACC,GACNgH,KAAMhH,MAAN,UAAeA,EAAM+G,QAArB,MAAkC,CAChCG,SAAUF,KAAMG,SAASE,YAE5B,IACAgC,SAAQ,WACPb,GACD,GACJ,IAuBG,cAAC,KAAD,MAGL,EC5Gc,I,MAAA,IAA0B,0C,0DCa1B,SAASc,KACtB,MAAwBjE,oBAAS,GAAjC,mBAAO/E,EAAP,KAAaiJ,EAAb,KAIA,OACE,8BACE,qBAAKnJ,UAAWE,EAAO,UAAY,0BAAnC,SACE,sBAAKF,UAAU,qBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEiC,IAAKmH,GACL/G,IAAI,UACJrC,UACEE,EACI,oBACA,kDAIV,wBACEF,UACEE,EACI,uBACA,oDAEND,QAxBS,WACjBkJ,GAASjJ,EACV,EAgBO,SAQGA,EACC,cAAC,KAAD,IAEA,cAAC,KAAD,MAGJ,qBAAIF,UAAU,sBAAd,UACE,6BACE,eAAC,IAAD,CAASQ,GAAG,QAAQR,UAAU,oBAA9B,UACE,+BACE,cAAC,KAAD,CAAiBqJ,KAAMC,SAEzB,sBACEtJ,UACEE,EACI,wBACA,6BAJR,0BAWJ,6BACE,eAAC,IAAD,CAASM,GAAG,UAAUR,UAAU,oBAAhC,UACE,+BACE,cAAC,KAAD,CAAiBqJ,KAAME,SAEzB,sBACEvJ,UACEE,EACI,wBACA,6BAJR,6BAWJ,6BACE,eAAC,IAAD,CAASM,GAAG,aAAaR,UAAU,WAAnC,UACE,+BACE,cAAC,KAAD,CAAiBqJ,KAAMG,SAEzB,uBACExJ,UACEE,EACI,wBACA,6BAJR,UAOG,IAPH,iCAiBf,CC1EcuJ,OAjBf,WACE,IAAMlL,EAAaC,YAAYlC,GAC/B,OACE,cAAC,IAAD,UACE,sBAAK0D,UAAU,MAAf,UACGzB,EAAa,cAAC2K,GAAD,IAAc,KAC5B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC,GAAD,MACxC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,QAAS,cAAC,GAAD,aAK9C,ECdmBC,QACW,cAA7BzM,OAAOC,SAASyM,UAEe,UAA7B1M,OAAOC,SAASyM,UAEhB1M,OAAOC,SAASyM,SAASC,MACvB,2D,8BCPOC,GAAe9O,YAAY,CACtCC,KAAM,UACNC,aALmB,CACnB6O,cAAe,IAKfzO,SAAU,CACR0O,iBAAkB,SAACxO,EAAOC,GACxBD,EAAMuO,cAAgBtO,EAAOC,OAC9B,KCZU,IDgBqBoO,GAAa5N,QAAlC8N,iBChBA,CACb3N,gBACAmE,KCLa,WAOT,IANJhF,EAMG,uDANK,CACN8D,KAAM,GACNqB,WAAW,EACXjB,MAAO,MAETjE,EACG,uCACH,OAAQA,EAAO0H,MACb,KAAKjH,EACH,OAAO,6BACFV,GADL,IAEEmF,WAAW,IAGf,KAAKzE,EACH,OAAO,6BACFV,GADL,IAEEmF,WAAW,EACXjB,MAAO,KACPJ,KAAK,aAAK7D,EAAO+E,QAIrB,KAAKtE,EACH,OAAO,6BACFV,GADL,IAEEmF,WAAW,EACXjB,MAAOjE,EAAOiE,QAGlB,QACE,OAAOlE,EAhCb,EDMEuI,YACA4E,QDoCamB,GAAf,U,kBGxCMG,GAAaC,2BAAgB5O,IAE7B6O,GAAc,CAACC,MAERC,GAAQC,uBACnBL,GACAM,+BAAoBC,mBAAe,WAAf,EAAmBL,MCHzCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAIJrM,SAAS4M,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5L,MAAK,SAAA6L,GACJA,EAAaC,YACd,IACAxL,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM+G,QACrB,G","file":"static/js/main.008a75f6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  accessToken: \"\",\r\n  tokenExpiryDate: \"\",\r\n};\r\nexport const authenticationSlice = createSlice({\r\n  name: \"authorization\",\r\n  initialState,\r\n  reducers: {\r\n    setLoggedIn: (state, action) => {\r\n      state.loggedIn = action.payload;\r\n    },\r\n    setAccessToken: (state, action) => {\r\n      state.accessToken = action.payload;\r\n    },\r\n    setTokenExpiryDate: (state, action) => {\r\n      const date = new Date();\r\n      date.setSeconds(date.getSeconds() + action.payload);\r\n      state.tokenExpiryDate = date.toISOString();\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoggedIn, setAccessToken, setUserId, setTokenExpiryDate } =\r\n  authenticationSlice.actions;\r\n\r\nexport const selectIsLoggedIn = (state) => state.authorization.loggedIn;\r\nexport const selectAccessToken = (state) => state.authorization.accessToken;\r\nexport const selectTokenExpiryDate = (state) =>\r\n  state.authorization.tokenExpiryDate;\r\n\r\nexport default authenticationSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setLoggedIn } from \"../authentication/authenticationSlice\";\r\n\r\nconst getAccessToken = () => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    return localStorage.getItem(\"accessToken\");\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  displayName: \"\",\r\n  userId: \"\",\r\n  product: \"\",\r\n  recentlyPlayed: [],\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setDisplayName: (state, action) => {\r\n      state.displayName = action.payload;\r\n    },\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    setProduct: (state, action) => {\r\n      state.product = action.payload;\r\n    },\r\n    setRecentlyPlayed: (state, action) => {\r\n      state.recentlyPlayed = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDisplayName, setUserId, setProduct, setRecentlyPlayed } =\r\n  userSlice.actions;\r\n\r\nexport const selectDisplayName = (state) => state.user.displayName;\r\nexport const selectProduct = (state) => state.user.product;\r\nexport const userId = (state) => state.user.userId;\r\nexport const recentActivity = (state) => state.user.recentlyPlayed;\r\n\r\nexport const setUserProfileAsync = (accessToken) => (dispatch) => {\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/me\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(setDisplayName(data.display_name ? data.display_name : \"\"));\r\n      dispatch(setUserId(data.id));\r\n      // we inject also userId in localStorage in order to reuse it easily\r\n      localStorage.setItem(\"userId\", data.id);\r\n      dispatch(setProduct(data.product));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      if (error) {\r\n        if (error.status === 401) {\r\n          dispatch(setLoggedIn(false));\r\n        }\r\n      }\r\n    });\r\n};\r\n\r\nexport const getRecentlyPlayed = () => (dispatch) => {\r\n  const accessToken = getAccessToken();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/me/player/recently-played\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch(setRecentlyPlayed(data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport default userSlice.reducer;\r\n","const prod = {\r\n  url: {\r\n    API_URL: 'https://mathieu94110.github.io/My_spotify-app/',\r\n  },\r\n};\r\nconst dev = {\r\n  url: {\r\n    API_URL: 'http://localhost:3000',\r\n  },\r\n};\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setLoggedIn,\r\n  setAccessToken,\r\n  setTokenExpiryDate,\r\n  selectIsLoggedIn,\r\n} from \"../../store/authentication/authenticationSlice\";\r\nimport { setUserProfileAsync } from \"../../store/user/userSlice\";\r\nimport { getAuthorizeHref } from \"../../oauthConfig\";\r\nimport { getHashParams, removeHashParamsFromUrl } from \"../../utils/hashUtils\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport \"./Authentication.scss\";\r\n\r\n// Here we register url values when getAuthorizeHref get the data from spotify api\r\nconst hashParams = getHashParams();\r\nconst access_token = hashParams.access_token;\r\nconst expires_in = hashParams.expires_in;\r\n// We clean hash\r\nremoveHashParamsFromUrl();\r\n\r\nconst Authentication = () => {\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (access_token) {\r\n      // We sending access Token to localStorage and other values to reducers\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      dispatch(setLoggedIn(true));\r\n      dispatch(setAccessToken(access_token));\r\n      dispatch(setTokenExpiryDate(Number(expires_in)));\r\n      dispatch(setUserProfileAsync(access_token));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {!isLoggedIn && (\r\n        <button\r\n          className=\"login__button\"\r\n          aria-label=\"Log in using OAuth 2.0\"\r\n          onClick={() => window.open(getAuthorizeHref(), \"_self\")}\r\n        >\r\n          Se connecter\r\n        </button>\r\n      )}\r\n      {\r\n        //When logged we navigate to home\r\n        isLoggedIn && <Navigate replace to=\"/home\" />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","export const getHashParams = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(function (initial, item) {\r\n      if (item) {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      }\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const removeHashParamsFromUrl = () => {\r\n  window.history.pushState(\r\n    \"\",\r\n    document.title,\r\n    window.location.pathname + window.location.search\r\n  );\r\n};\r\n","import { config } from './Constants';\r\nconst authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\nexport const getAuthorizeHref = () => {\r\n  const scopes = [\r\n    'user-read-private',\r\n    'playlist-modify-public',\r\n    'playlist-modify-private',\r\n    'user-read-recently-played',\r\n    'user-top-read',\r\n  ];\r\n  const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\n  const redirectUri = config.url.API_URL;\r\n  return `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    '%20'\r\n  )}&response_type=token`;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const lastActivitySelector = (state) => state.user;\r\n\r\nexport const lastActivityIsLoadingSelector = createSelector(\r\n  [lastActivitySelector],\r\n  (user) => user.isLoading\r\n);\r\n\r\nexport const lastActivityListSelector = createSelector(\r\n  [lastActivitySelector],\r\n  (user) => user.data\r\n);\r\n","import * as axios from 'axios';\r\n\r\nconst apiSpotify = axios.create({\r\n  baseURL: 'https://api.spotify.com/v1/',\r\n});\r\nconst getAccessToken = () => {\r\n  if (localStorage.getItem('accessToken')) {\r\n    return localStorage.getItem('accessToken');\r\n  }\r\n};\r\nconst accessToken = getAccessToken();\r\n\r\napiSpotify.interceptors.request.use((req) => {\r\n  req.headers['Authorization'] = `Bearer ${accessToken}`;\r\n  return req;\r\n});\r\n\r\nexport default {\r\n  getLastActivity: () =>\r\n    apiSpotify\r\n      .get('me/player/recently-played')\r\n      .then((response) => (response.data.items ? response.data.items : [])),\r\n};\r\n","import apiUserRequest from '../../conf/api.user';\r\n\r\nexport const REQUEST_LAST_ACTIVITY = 'request last activity';\r\nexport const FETCH_LAST_ACTIVITY = 'fetch last activity';\r\nexport const FETCH_LAST_ACTIVITY_SUCCESS = 'fetch last activity success';\r\nexport const FETCH_LAST_ACTIVITY_ERROR = 'fetch last activity error';\r\n\r\nexport const requestRecentActivity = () => ({\r\n  type: REQUEST_LAST_ACTIVITY,\r\n});\r\n\r\nexport const fetchRecentActivitySuccess = (user) => ({\r\n  type: FETCH_LAST_ACTIVITY_SUCCESS,\r\n  user,\r\n});\r\n\r\nexport const fetchRecentActivityError = (error) => ({\r\n  type: FETCH_LAST_ACTIVITY_ERROR,\r\n  error,\r\n});\r\n\r\nexport const getLastActivity = () => (dispatch) => {\r\n  dispatch(requestRecentActivity());\r\n  return apiUserRequest.getLastActivity().then(\r\n    (user) => dispatch(fetchRecentActivitySuccess(user)),\r\n    (error) => dispatch(fetchRecentActivityError(error))\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport './RecentlyPlayed.scss';\r\n// import RecentlyPlayedSongs from \"./recentlyPLayedSongs/RecentlyPlayedSongs\";\r\n\r\nconst RecentlyPlayed = (props) => {\r\n  useEffect(() => {\r\n    console.log(props);\r\n  }, []);\r\n\r\n  const convertTime = (num) => {\r\n    const minutes = Math.floor(num / 60000);\r\n    const secondes = num % 60;\r\n    return minutes + ':' + secondes;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recently-played\">\r\n      <h2 className=\"recently-played__title\">Écouté dernièrement</h2>\r\n      <div className=\"recently-played__content\">\r\n        {props.songs &&\r\n          props.songs.map((item) => (\r\n            <div className=\"recently-played__items\" key={item.track.id}>\r\n              <p>\r\n                <img\r\n                  src={item.track.album.images[2].url}\r\n                  alt=\"\"\r\n                  style={{ width: '60px' }}\r\n                />\r\n              </p>\r\n              <p className=\"recently-played__track-name\">{item.track.name}</p>\r\n\r\n              <p>{convertTime(item.track.duration_ms)}</p>\r\n              <p>{new Date(item.played_at).toLocaleDateString('fr')}</p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <img alt=\"loading gif\" src=\"https://i.redd.it/ounq1mw5kdxy.gif\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import { selectDisplayName } from '../../store/user/userSlice';\r\nimport './Home.scss';\r\n// import { useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  lastActivityIsLoadingSelector,\r\n  lastActivityListSelector,\r\n} from '../../store/selectors';\r\nimport { getLastActivity } from '../../store/actions';\r\nimport Recentlyplayed from '../../components/home/recentlyPlayed/recentlyPlayed/RecentlyPlayed';\r\nimport Loading from '../../components/utils/Loading';\r\n\r\nconst Home = (props) => {\r\n  // const [topArtists, setTopArtists] = useState([]);\r\n  // const dispatch = useDispatch();\r\n\r\n  // const userName = useSelector(selectDisplayName);\r\n  useEffect(() => {\r\n    props.getLastActivity();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"home\">\r\n          <h1 className=\"home__title\">\r\n            Bienvenue{' '}\r\n            {/* {userName.charAt(0).toUpperCase() + userName.slice(1)} */}, vous\r\n            êtes bien connecté sur votre plateforme Spotify\r\n          </h1>\r\n          <Recentlyplayed songs={props.user} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    isLoading: lastActivityIsLoadingSelector(state),\r\n    user: lastActivityListSelector(state),\r\n  }),\r\n  {\r\n    getLastActivity,\r\n  }\r\n)(Home);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getAccessToken = () => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    return localStorage.getItem(\"accessToken\");\r\n  }\r\n};\r\nconst getUserId = () => {\r\n  if (localStorage.getItem(\"userId\")) {\r\n    return localStorage.getItem(\"userId\");\r\n  }\r\n};\r\nconst initialState = {\r\n  playlistsItems: [],\r\n  total: 0,\r\n};\r\n\r\nexport const playlistsSlice = createSlice({\r\n  name: \"playlists\",\r\n  initialState,\r\n  reducers: {\r\n    setPlaylistsItem: (state, action) => {\r\n      state.playlistsItems = action.payload;\r\n    },\r\n    setTotal: (state, action) => {\r\n      state.total = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPlaylistsItem, setTotal } = playlistsSlice.actions;\r\n\r\nexport const selectplaylistsItems = (state) => state.playlists.playlistsItems;\r\nexport const selectplaylistsTotal = (state) => state.playlists.total;\r\n\r\nexport const getUserPlaylists = () => (dispatch) => {\r\n  const accessToken = getAccessToken();\r\n  const userId = getUserId();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/users/\" + userId + \"/playlists\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(setPlaylistsItem(data.items));\r\n      dispatch(setTotal(data.total));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const createPlaylist = (value) => (dispatch) => {\r\n  const { name, description } = value;\r\n  const accessToken = getAccessToken();\r\n  const userId = getUserId();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: JSON.stringify({ name: name, description: description }),\r\n  }).then(\r\n    (response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    },\r\n    (networkError) => {\r\n      console.log(networkError.message);\r\n    }\r\n  );\r\n};\r\n\r\nexport const addTrackToPlaylist = (uris) => (dispatch) => {\r\n  const { uri, id } = uris;\r\n  const accessToken = getAccessToken();\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  return fetch(\r\n    `https://api.spotify.com/v1/playlists/${id}/tracks?uris=${uri}`,\r\n    {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n    }\r\n  ).then(\r\n    (response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    },\r\n    (networkError) => {\r\n      console.log(networkError.message);\r\n    }\r\n  );\r\n};\r\n\r\nexport default playlistsSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./Card.scss\";\r\n\r\nconst Card = (props) => {\r\n  const { image, uri, name, description, details } = props;\r\n  const style = {\r\n    background: \"url(\" + image + \") center center no-repeat\",\r\n    maxWidth: \"100%\",\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <header style={style} id={image} className=\"card__header\"></header>\r\n      <div className=\"card__body\">\r\n        <p className=\"card__date\">\r\n          Lien: <a href={uri}>{uri}</a>\r\n        </p>\r\n\r\n        <h2>{name}</h2>\r\n\r\n        <p className=\"card__content\">\r\n          {description ? description : \"Aucune description\"}\r\n        </p>\r\n        {details && (\r\n          <button className=\"button card__button-primary\">\r\n            <i className=\"fa fa-chevron-right\"></i> Voir le détail\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./UserPlaylists.scss\";\r\nimport Card from \"../../../layout/card/Card\";\r\nimport {\r\n  selectplaylistsItems,\r\n  getUserPlaylists,\r\n} from \"../../../store/playlists/playlistsSlice\";\r\n\r\nconst UserPlaylists = () => {\r\n  const playlists = useSelector(selectplaylistsItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserPlaylists());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"user-playlists\">\r\n      <div className=\"user-playlists__title\">\r\n        {\" \"}\r\n        <h2>Vos playlists</h2>\r\n      </div>\r\n      <div className=\"user-playlists__content\">\r\n        {playlists &&\r\n          playlists.map((item, index) => (\r\n            <div key={index}>\r\n              <Card\r\n                image={item.images[0] && item.images[0].url}\r\n                uri={item.uri}\r\n                name={item.name}\r\n                description={item.description}\r\n                details=\"true\"\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPlaylists;\r\n","import { useState } from \"react\";\r\nimport \"./CreatePlaylist.scss\";\r\n\r\nexport default function createPlaylist({\r\n  createPlayList,\r\n  cancelPlaylistCreation,\r\n  confirmPlaylistCreation,\r\n}) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isPlaylistCreated, setIsPlaylistCreated] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const createdPlaylist = {\r\n      name: name,\r\n      description: description,\r\n    };\r\n    createPlayList(createdPlaylist);\r\n    setIsPlaylistCreated(true);\r\n  };\r\n\r\n  const confirmCreation = () => {\r\n    confirmPlaylistCreation();\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    cancelPlaylistCreation();\r\n    setIsPlaylistCreated(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-playlist\">\r\n      <div className=\"create-playlist__title\">\r\n        <h2>Créer une playlist</h2>\r\n      </div>\r\n      <div className=\"create-playlist__form-container\">\r\n        <form className=\"create-playlist__form\" onSubmit={handleSubmit}>\r\n          <label className=\"create-playlist__form-label\">\r\n            Nom:\r\n            <input\r\n              type=\"text\"\r\n              id=\"outlined-basic\"\r\n              className=\"create-playlist__form-inputs\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n              disabled={isPlaylistCreated}\r\n            />\r\n          </label>\r\n          <label className=\"create-playlist__form-label\">\r\n            Description:\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"outlined-basic\"\r\n              className=\"create-playlist__form-inputs\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(event) => setDescription(event.target.value)}\r\n              disabled={isPlaylistCreated}\r\n            />\r\n          </label>\r\n          {isPlaylistCreated ? (\r\n            <>\r\n              <input\r\n                className=\"create-playlist__button create-playlist__button-validate\"\r\n                type=\"button\"\r\n                value=\"Valider la playlist\"\r\n                onClick={() => confirmCreation()}\r\n              />\r\n              <input\r\n                className=\"create-playlist__button create-playlist__button-cancel\"\r\n                type=\"button\"\r\n                value=\"Annuler\"\r\n                onClick={() => reset()}\r\n              />\r\n            </>\r\n          ) : (\r\n            <input\r\n              className=\"create-playlist__button create-playlist__button-create\"\r\n              type=\"submit\"\r\n              value=\"Créer la playlist\"\r\n              disabled={!name || !description}\r\n            />\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./CreatePlaylistModel.scss\";\r\nimport Card from \"../../../layout/card/Card\";\r\n\r\nconst CreatePlaylistModel = (props) => {\r\n  const { name, description, image, uri, details } = props;\r\n  return (\r\n    <div className=\"create-playlist-model\">\r\n      <div className=\"create-playlist-model__title\">\r\n        {\" \"}\r\n        <h2>Récapitulatif</h2>\r\n      </div>\r\n      <div className=\"create-playlist-model__content\">\r\n        <Card\r\n          image={image}\r\n          uri={uri}\r\n          name={name}\r\n          description={description}\r\n          details={details}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePlaylistModel;\r\n","import { useState } from \"react\";\r\nimport \"./Playlists.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPlaylist } from \"../../store/playlists/playlistsSlice\";\r\nimport UserPlaylists from \"../../components/playlists/userPlaylists/UserPlaylists\";\r\nimport CreatePlaylist from \"../../components/playlists/createPlaylist/CreatePlaylist\";\r\nimport CreatePlaylistModel from \"../../components/playlists/createPlaylistModel/CreatePlaylistModel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Playlists = () => {\r\n  const [createdPlaylistInfo, setCreatedPlaylistInfo] = useState({});\r\n  const [isCreateButtonDisabled, setIsCreateButtonDisabled] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const validatePlaylist = (value) => {\r\n    setCreatedPlaylistInfo(value);\r\n  };\r\n  const confirmPlaylistCreation = () => {\r\n    dispatch(createPlaylist(createdPlaylistInfo))\r\n      .then(() => {\r\n        toast.success(\"La playlist a bien été créee !\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${error.message} !`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      });\r\n  };\r\n  const cancelPlaylistCreation = () => {\r\n    setCreatedPlaylistInfo({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlists\">\r\n      <div className=\"playlists__content\">\r\n        <UserPlaylists />\r\n        <CreatePlaylist\r\n          createPlayList={validatePlaylist}\r\n          cancelPlaylistCreation={cancelPlaylistCreation}\r\n          setCreateDisabled={isCreateButtonDisabled}\r\n          confirmPlaylistCreation={confirmPlaylistCreation}\r\n        />\r\n        {createdPlaylistInfo.name && (\r\n          <CreatePlaylistModel\r\n            name={createdPlaylistInfo.name}\r\n            description={createdPlaylistInfo.description}\r\n          />\r\n        )}\r\n      </div>\r\n      {/* Tag below is necessary to display toast message*/}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","import React from \"react\";\r\nimport \"./SearchResultItem.scss\";\r\n\r\nconst SearchResultItem = ({ track, modalCallback }) => {\r\n  const handleParentCallback = () => {\r\n    modalCallback(track);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-result-item\">\r\n      <span className=\"search-result-item__image\">\r\n        <img src={track.albumUrl} />{\" \"}\r\n      </span>\r\n      <div>\r\n        <div>\r\n          {\" \"}\r\n          <span className=\"search-result-item__text\">{track.title}</span>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <span className=\"search-result-item__artist\">{track.artist}</span>\r\n        </div>\r\n        <button\r\n          className=\"search-result-item__button\"\r\n          onClick={handleParentCallback}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultItem;\r\n","import React from \"react\";\r\nimport \"./SearchResult.scss\";\r\nimport SearchResultItem from \"../searchResultItem/SearchResultItem\";\r\n\r\nconst SearchResult = ({ searchResults, modalCallback }) => {\r\n  return (\r\n    <div className=\"search-result\">\r\n      {searchResults.map((track, index) => (\r\n        <SearchResultItem\r\n          track={track}\r\n          key={index}\r\n          modalCallback={modalCallback}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddTrackModal.scss\";\r\n\r\nconst AddTrackModal = ({ setIsOpen, playlists, track, addTrackToPlaylist }) => {\r\n  const [checkedPlaylist, setCheckedPlaylist] = useState(false);\r\n\r\n  const handleChange = (value) => {\r\n    setCheckedPlaylist(value);\r\n  };\r\n\r\n  const AddTrackCallback = () => {\r\n    addTrackToPlaylist(track, checkedPlaylist);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-track-modal\">\r\n        <div className=\"add-track-modal__modal\">\r\n          <div>\r\n            <h2 className=\"add-track-modal__title\">\r\n              Ajouter le titre à une playlist\r\n            </h2>\r\n            <div className=\"add-track-modal__subtitle\">\r\n              Sélectionner la playlist\r\n            </div>\r\n          </div>\r\n          <div className=\"add-track-modal__playlists\">\r\n            {playlists &&\r\n              playlists.map((playlist, index) => {\r\n                return (\r\n                  <div key={index} className=\"add-track-modal__playlists-items\">\r\n                    <span>{playlist.name}</span>{\" \"}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={playlist.id}\r\n                      checked={checkedPlaylist === playlist}\r\n                      onChange={() => handleChange(playlist)}\r\n                    ></input>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div>\r\n            <div className=\"add-track-modal__actions\">\r\n              <button\r\n                className=\"cancel-button\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                Annuler\r\n              </button>\r\n              <button\r\n                className=\"validate-button\"\r\n                onClick={() => AddTrackCallback()}\r\n              >\r\n                Valider\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTrackModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchResult from \"../../components/search/searchResult/SearchResult\";\r\nimport AddTrackModal from \"../../components/modal/AddTrackModal\";\r\nimport \"./Search.scss\";\r\nimport {\r\n  selectplaylistsItems,\r\n  getUserPlaylists,\r\n  addTrackToPlaylist,\r\n} from \"../../store/playlists/playlistsSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Search = () => {\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // const [trackUri, setTrackUri] = useState(\"\");\r\n  const [track, setTrack] = useState(\"\");\r\n  const playlists = useSelector(selectplaylistsItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserPlaylists());\r\n  }, []);\r\n\r\n  const isModalOpen = (value) => {\r\n    setTrack(value);\r\n    return setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n      params: {\r\n        q: search,\r\n        type: \"track\",\r\n      },\r\n    };\r\n    axios.get(\"https://api.spotify.com/v1/search\", config).then((res) => {\r\n      setSearchResults(\r\n        res.data.tracks.items.map((track) => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image;\r\n              return smallest;\r\n            },\r\n            track.album.images[0]\r\n          );\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          };\r\n        })\r\n      );\r\n    });\r\n  }, [search]);\r\n\r\n  const addTrack = (track, checkedPlaylist) => {\r\n    const { title, uri, ...trackRest } = track;\r\n    const { id, name, ...playlistRest } = checkedPlaylist;\r\n\r\n    dispatch(addTrackToPlaylist({ uri, id }))\r\n      .then(() => {\r\n        toast.success(`${title} a bien été ajouté à ${name} !`, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${error.message} !`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        isModalOpen();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"search__input\"\r\n        type=\"search\"\r\n        placeholder=\"Rechercher un titre\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <SearchResult searchResults={searchResults} modalCallback={isModalOpen} />\r\n\r\n      {isOpen && (\r\n        <AddTrackModal\r\n          setIsOpen={isModalOpen}\r\n          playlists={playlists}\r\n          // trackUri={trackUri}\r\n          track={track}\r\n          addTrackToPlaylist={addTrack}\r\n        />\r\n      )}\r\n      {/* Tag below is necessary to display toast message*/}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/spotify-logo.056948ef.png\";","import { useState } from \"react\";\r\nimport \"./SideBar.scss\";\r\nimport spotifyLogo from \"../../assets/images/spotify-logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faMagnifyingGlass,\r\n  faFolder,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport KeyboardDoubleArrowLeftIcon from \"@mui/icons-material/KeyboardDoubleArrowLeft\";\r\n\r\nexport default function Sidebar() {\r\n  const [open, setopen] = useState(true);\r\n  const toggleOpen = () => {\r\n    setopen(!open);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={open ? \"sidebar\" : \"sidebar sidebar--closed\"}>\r\n        <div className=\"sidebar__top-links\">\r\n          <div className=\"sidebar__logo\">\r\n            <img\r\n              src={spotifyLogo}\r\n              alt=\"spotify\"\r\n              className={\r\n                open\r\n                  ? \"sidebar__logo-img\"\r\n                  : \"sidebar__logo-img sidebar__logo-img--closed\"\r\n              }\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              open\r\n                ? \"sidebar__menu-toggle\"\r\n                : \"sidebar__menu-toggle sidebar__menu-toggle--closed\"\r\n            }\r\n            onClick={toggleOpen}\r\n          >\r\n            {open ? (\r\n              <KeyboardDoubleArrowLeftIcon />\r\n            ) : (\r\n              <KeyboardDoubleArrowRightIcon />\r\n            )}\r\n          </button>\r\n          <ul className=\"sidebar__list-items\">\r\n            <li>\r\n              <NavLink to=\"/home\" className=\"sidebar__nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faHome} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  Accueil\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/search\" className=\"sidebar__nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  Rechercher\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/playlists\" className=\"nav-link\">\r\n                <span>\r\n                  <FontAwesomeIcon icon={faFolder} />\r\n                </span>\r\n                <span\r\n                  className={\r\n                    open\r\n                      ? \"sidebar__text-display\"\r\n                      : \"sidebar__text-display-none\"\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  Vos playlists\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Authentication from './pages/authentication/authentication';\r\nimport Home from './pages/home/Home';\r\nimport { HashRouter, Routes, Route } from 'react-router-dom';\r\nimport Playlists from './pages/playlists/Playlists';\r\nimport Search from './pages/search/Search';\r\nimport Sidebar from './components/SideBar/SideBar';\r\nimport { selectIsLoggedIn } from './store/authentication/authenticationSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction App() {\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        {isLoggedIn ? <Sidebar /> : null}\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Authentication />} />\r\n          <Route exact path=\"/playlists\" element={<Playlists />} />\r\n          <Route exact path=\"/home\" element={<Home />} />\r\n          <Route exact path=\"/search\" element={<Search />} />\r\n        </Routes>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst getAccessToken = () => {\r\n  if (localStorage.getItem(\"accessToken\")) {\r\n    return localStorage.getItem(\"accessToken\");\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  topUserArtist: [],\r\n};\r\nexport const artistsSlice = createSlice({\r\n  name: \"artists\",\r\n  initialState,\r\n  reducers: {\r\n    setTopUserArtist: (state, action) => {\r\n      state.topUserArtist = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTopUserArtist } = artistsSlice.actions;\r\n\r\nexport const selectTopUserArtist = (state) => state.artists.topUserArtist;\r\n\r\nexport const getTop = (value) => (dispatch) => {\r\n  const accessToken = getAccessToken();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\r\n\r\n  fetch(\"https://api.spotify.com/v1/me/player/recently-played\", {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch(setTopUserArtist(data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport default artistsSlice.reducer;\r\n","import authorization from './authentication/authenticationSlice';\r\nimport user from './user/user.reducers';\r\nimport playlists from './playlists/playlistsSlice';\r\nimport artists from './artists/artistsSlice';\r\n\r\nexport default {\r\n  authorization,\r\n  user,\r\n  playlists,\r\n  artists,\r\n};\r\n","import * as actions from './user.actions';\r\n\r\nexport default (\r\n  state = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case actions.REQUEST_LAST_ACTIVITY: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case actions.FETCH_LAST_ACTIVITY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        data: [...action.user],\r\n      };\r\n    }\r\n\r\n    case actions.FETCH_LAST_ACTIVITY_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport reducers from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst appReducer = combineReducers(reducers);\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nexport const store = createStore(\r\n  appReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}